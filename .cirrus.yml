task:
  container:
    image: openjdk:7-jdk
    cpu: 4
    memory: 8
#services:
#  - docker
#before_install:
#- docker pull lineageos4microg/docker-lineage-cicd
#- git clone git://github.com/RR-msm7x30/android_device_samsung_ancora.git -b cm-12.1 device/samsung/ancora
#- docker run -e "BRANCH_NAME=cm-12.1" -e "DEVICE_LIST=ancora" -v "/home/user/lineage:/srv/src" -v "/home/user/zips:/srv/zips" -v "/home/user/logs:/srv/logs" -v "/home/user/cache:/srv/ccache" -e "INCLUDE_PROPRIETARY=false" -v "$(pwd):/srv/local_manifests"  lineageos4microg/docker-lineage-cicd
  build_script:
# Install dependency
    - apt-get update
    - apt-get -qq install software-properties-common
    - apt-get  -qq install -y dpkg bc bison build-essential ccache curl flex g++-multilib gcc-multilib git gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libssl-dev libwxgtk3.0-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev subversion> /dev/null
    - apt install debian-archive-keyring 
    - add-apt-repository 'deb http://httpredir.debian.org/debian experimental main' 
    - add-apt-repository 'deb http://httpredir.debian.org/debian sid main' 
    - apt -qq update
    - apt -qq install openjdk-7-jdk
#    - add-apt-repository "deb http://us.archive.ubuntu.com/ubuntu/ bionic main"
#- wget http://ftp.br.debian.org/debian/pool/main/f/flex/libfl2_2.6.4-6.1_amd64.deb
#- sudo dpkg -i libfl2_2.6.4-6.1_amd64.deb
#- sudo add-apt-repository ppa:ubuntu-toolchain-r/test
#    - apt-get  -qq update 
#    - apt  -qq install libfl2
# getting UberTC
    - git clone  --depth=1 "https://bitbucket.org/matthewdalex/arm-eabi-7.x" "../arm-eabi-7.x"
    - export CROSS_COMPILE="$(pwd)/../arm-eabi-7.x/bin/arm-eabi-"
    - ldconfig
#- source build.sh <<< "${nbasebuildsh}"
    - export ARCH=arm && export SUBARCH=arm
#Fix mesg n stdin: is not a tty
    - cp -f .profile ~/.profile
    - source setup-others.sh
    - cd $OUT
    - ls -l

#- make clean && make mrproper 
#- make ancora_oc_exuv_defconfig 
#- make -j 4 V=1


# Export of zipfile to deploy
#- export zipfile="${zipfile}"

deploy:
  provider: releases
  skip_cleanup: true
  api_key: ${KEY}
  file_glob: true
  file: "arch/${ARCH}/boot/*Image*"
  on:
  #  tags: true
    all_branches: true

