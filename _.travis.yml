sudo: required
dist: trusty
#services:
#  - docker
#before_install:
#- docker pull lineageos4microg/docker-lineage-cicd
#- git clone git://github.com/RR-msm7x30/android_device_samsung_ancora.git -b cm-12.1 device/samsung/ancora
#- docker run -e "BRANCH_NAME=cm-12.1" -e "DEVICE_LIST=ancora" -v "/home/user/lineage:/srv/src" -v "/home/user/zips:/srv/zips" -v "/home/user/logs:/srv/logs" -v "/home/user/cache:/srv/ccache" -e "INCLUDE_PROPRIETARY=false" -v "$(pwd):/srv/local_manifests"  lineageos4microg/docker-lineage-cicd
language: None
cache: ccache
env: GCC_VERSION=7
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - gcc-7
    - g++-7
    - flex
    - bc bison build-essential ccache curl flex g++-multilib gcc-multilib git gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libssl-dev libwxgtk3.0-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev
    - openjdk-7-jdk > /dev/null
script:
# Install dependency
- sudo apt-get  -qq install -y dpkg
- sudo add-apt-repository "deb http://us.archive.ubuntu.com/ubuntu/ bionic main"
#- wget http://ftp.br.debian.org/debian/pool/main/f/flex/libfl2_2.6.4-6.1_amd64.deb
#- sudo dpkg -i libfl2_2.6.4-6.1_amd64.deb
#- sudo add-apt-repository ppa:ubuntu-toolchain-r/test
- sudo apt-get  -qq update 
- sudo apt  -qq install libfl2
# getting UberTC
- git clone  --depth=1 "https://bitbucket.org/matthewdalex/arm-eabi-7.x" "../arm-eabi-7.x"
- export CROSS_COMPILE="$(pwd)/../arm-eabi-7.x/bin/arm-eabi-"
- sudo ldconfig
#- source build.sh <<< "${nbasebuildsh}"
- export ARCH=arm && export SUBARCH=arm
- mkdir ~/android/lineage/.repo/local_manifests
- curl https://raw.githubusercontent.com/mtlive/cm12.1-build-ancora/master/ancora.xml -o ~/android/lineage/.repo/local_manifests/ancora.xml
- source setup-others.sh
- source build/envsetup.sh
- cd ~/android/lineage
- breakfast ancora
- croot
- brunch ancora
- cd $OUT
- ls -l
#- make clean && make mrproper 
#- make ancora_oc_exuv_defconfig 
#- make -j 4 V=1


# Export of zipfile to deploy
#- export zipfile="${zipfile}"

deploy:
  provider: releases
  skip_cleanup: true
  api_key: ${KEY}
  file_glob: true
  file: "arch/${ARCH}/boot/*Image*"
  on:
  #  tags: true
    all_branches: true

